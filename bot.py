from telegram import ReplyKeyboardMarkup, KeyboardButton, Update
from telegram.ext import Application, MessageHandler, ContextTypes, filters

# –¢–æ–∫–µ–Ω –∏ chat_id –≥—Ä—É–ø–ø—ã
TOKEN = '8032278690:AAGSOSKz161dujSV03mbra6W71qOZ_4t-S0'
GROUP_CHAT_ID = -1002203558146

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏
keyboard = ReplyKeyboardMarkup(
    [
        [KeyboardButton("üì§ –ü–æ–ø—Ä–æ—Å–∏—Ç–∏ –¥–æ–ø–æ–º–æ–≥—É")],
        [KeyboardButton("üôè –ü–æ–¥—è–∫—É–≤–∞—Ç–∏")]
    ],
    resize_keyboard=True,
    one_time_keyboard=False
)

# –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    chat_type = message.chat.type
    text = message.text

    # –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∏, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤–µ—Å—å –æ—Å—Ç–∞–ª—å–Ω–æ–π —Ç–µ–∫—Å—Ç –≤ –≥—Ä—É–ø–ø–µ
    if chat_type != "private" and text not in ["üì§ –ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞", "üôè –ü–æ–¥—è–∫—É–≤–∞—Ç–∏"]:
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
    if text == "üì§ –ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞":
        await context.bot.send_message(
            chat_id=GROUP_CHAT_ID,
            text="üîî –ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞! instagram: @Vladosss991 @vikTyzz @Milajust @Bereshchenko13"
        )
        if chat_type == "private":
            await message.reply_text("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –¥–æ–ø–æ–º–æ–≥—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!", reply_markup=keyboard)

    elif text == "üôè –ü–æ–¥—è–∫—É–≤–∞—Ç–∏":
        await context.bot.send_message(
            chat_id=GROUP_CHAT_ID,
            text="üôè –í–µ–ª—å–º–∏ –¥—è–∫—É—é! instagram: @Vladosss991 @vikTyzz @Milajust @Bereshchenko13"
        )
        if chat_type == "private":
            await message.reply_text("‚úÖ –ü–æ–¥—è–∫–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞!", reply_markup=keyboard)

    elif chat_type == "private":
        # –í –ª–∏—á–∫–µ ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é
        await message.reply_text("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂—á–µ üëá", reply_markup=keyboard)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ú–æ–≤—á–∏—Ç—å —É –≥—Ä—É–ø—ñ, –∞–ª–µ —Ä–µ–∞–≥—É—î –Ω–∞ –∫–Ω–æ–ø–∫–∏.")
    app.run_polling()
import asyncio
from aiohttp import web

async def handle(request):
    return web.Response(text="Bot is running")

async def run_server():
    app = web.Application()
    app.router.add_get("/", handle)
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, port=10000)
    await site.start()

if __name__ == '__main__':
    asyncio.get_event_loop().create_task(run_server())  # ‚Üê —Ñ–æ–Ω–æ–≤—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    main()

